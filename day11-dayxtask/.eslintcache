[{"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\index.js":"1","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\App.js":"2","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\reportWebVitals.js":"3","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\propsstate\\reactCalculator.jsx":"4","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\employeeComponent.jsx":"5","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\constants.js":"6","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\dropdownComponent.jsx":"7","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\tableComponent.jsx":"8","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\Logic.js":"9","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\validationComponent\\validationComponent.jsx":"10","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\validationComponent\\validationSummaryComponent.jsx":"11","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\mainComponent.jsx":"12","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\listEmployees.jsx":"13","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\httpService.js":"14","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\addEmployee.jsx":"15","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\updateEmployee.jsx":"16","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\mainComponent.js":"17","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\tableComponent.js":"18","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\addEmployee.js":"19","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\updateEmployee.js":"20","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\jwtClient.js":"21"},{"size":1643,"mtime":1612091410598,"results":"22","hashOfConfig":"23"},{"size":528,"mtime":1610983456988,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":3530,"mtime":1610988875907,"results":"26","hashOfConfig":"23"},{"size":5538,"mtime":1611087173517,"results":"27","hashOfConfig":"23"},{"size":164,"mtime":1611051541210,"results":"28","hashOfConfig":"23"},{"size":1272,"mtime":1611058460124,"results":"29","hashOfConfig":"23"},{"size":1717,"mtime":1611082466696,"results":"30","hashOfConfig":"23"},{"size":680,"mtime":1611202666540,"results":"31","hashOfConfig":"23"},{"size":5138,"mtime":1611202690081,"results":"32","hashOfConfig":"23"},{"size":1218,"mtime":1611202089456,"results":"33","hashOfConfig":"23"},{"size":1423,"mtime":1611247759183,"results":"34","hashOfConfig":"23"},{"size":5844,"mtime":1611307322826,"results":"35","hashOfConfig":"23"},{"size":1413,"mtime":1612082197196,"results":"36","hashOfConfig":"23"},{"size":7552,"mtime":1611260398545,"results":"37","hashOfConfig":"23"},{"size":8024,"mtime":1611261195440,"results":"38","hashOfConfig":"23"},{"size":1141,"mtime":1612091170363,"results":"39","hashOfConfig":"23"},{"size":3026,"mtime":1612039665528,"results":"40","hashOfConfig":"23"},{"size":7698,"mtime":1612091178485,"results":"41","hashOfConfig":"23"},{"size":8012,"mtime":1612091183334,"results":"42","hashOfConfig":"23"},{"size":2120,"mtime":1612092112217,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"ewahjl",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"47"},"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\index.js",["96"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n//import './components/employeeComponent/style.css';\nimport './mern/style.css';\n\n// importing bootstrap\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n// import App from './App';\n// import the component to be mounted\n// import FirstComponent from './components/firstComponent';\n// import ParentComponent from \"./components/propsstate/parentChild\";\n// import StateComponent from './components/propsstate/stateComponent';\n//import EmployeeComponent from './components/employeeComponent/employeeComponent';\n//import ValidationComponent from './components/validationComponent/validationComponent';\nimport MainComponent from './finalmern/mainComponent';\n//import ListEmployees from './mern/listEmployees';\nimport LoginComponent from './finalmern/jwtClient';\n\nimport {BrowserRouter} from 'react-router-dom';\n\n\nimport reportWebVitals from './reportWebVitals';\n\n// Mount the App component on the HTML element having 'id' as 'root'\n// msg is the custom JSX attribute that will be generated by React.js JSX parser\n// at runtime and the property 'message' will be passed to <FirstComponent/>\n// the FirstComponent must accept it as the 'props'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <MainComponent></MainComponent>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["97","98"],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\App.js",[],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\reportWebVitals.js",[],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\propsstate\\reactCalculator.jsx",["99"],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\employeeComponent.jsx",[],["100","101"],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\constants.js",[],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\dropdownComponent.jsx",[],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\tableComponent.jsx",[],["102","103"],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\employeeComponent\\Logic.js",[],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\validationComponent\\validationComponent.jsx",["104"],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\components\\validationComponent\\validationSummaryComponent.jsx",[],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\mainComponent.jsx",[],["105","106"],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\listEmployees.jsx",["107","108","109"],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\httpService.js",[],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\addEmployee.jsx",[],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\mern\\updateEmployee.jsx",[],"E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\mainComponent.js",["110","111"],"import React, {useState, useEffect} from 'react';\r\nimport {Route, Link, Switch, Redirect} from 'react-router-dom';\r\nimport TableComponent from './tableComponent';\r\nimport AddEmployeeComponent from './addEmployee';\r\nimport UpdateEmployeeComponent from './updateEmployee';\r\n\r\n\r\nconst MainComponent=()=>{\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            \r\n            <h2>Hello</h2>\r\n            <table className=\"table table-bordered table-striped\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td><Link to=\"/\">Employee List</Link></td>\r\n                        <td><Link to=\"/addEmp\">Add Employee</Link></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={TableComponent}></Route>\r\n                <Route exact path=\"/addEmp\" component={AddEmployeeComponent}></Route>\r\n                <Route exact path=\"/updateEmp/:id\" component={UpdateEmployeeComponent}></Route>\r\n                <Redirect to=\"/\"></Redirect>\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainComponent;","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\tableComponent.js",["112","113","114","115"],"import React, {useState, useEffect, useCallback} from 'react';\r\nimport {HttpService} from './../mern/httpService';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst TableComponent=(props)=>{\r\n\r\n    let serv = new HttpService();\r\n    const [empArr,getEmpArr] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Table component mounted\");\r\n\r\n        serv.getAllEmp().then((resp)=>{getEmpArr(resp.data.response)}).catch((error)=>{console.log(error.message)});\r\n\r\n\r\n    },[]);\r\n\r\n    const delRecordInComponent = useCallback(\r\n        (evt) => {\r\n\r\n            let empArrID = evt.target.value;\r\n            console.log(empArr[empArrID].EmpNo);\r\n\r\n            serv.delEmp(empArr[empArrID].EmpNo).then((resp)=>{\r\n                window.location.reload();\r\n            }).catch((e)=>{console.log(e.message)});\r\n        },\r\n        [empArr]\r\n    );\r\n\r\n\r\n    if(empArr == undefined || empArr.length==0)\r\n    {\r\n        return(<h2>No Records found :( </h2>);\r\n    }\r\n\r\n    else\r\n    {\r\n        let tableData = empArr;\r\n        let tableHeaders = Object.keys(empArr[0]);\r\n\r\n        return(\r\n            <div>\r\n\r\n                <table className=\"table table-bordered table-striped table-hover table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            {\r\n                                tableHeaders.map((val,idx)=>(\r\n                                    <th key={idx}>{val}</th>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            tableData.map((obj,idx)=>(\r\n                                <tr>\r\n                                    {\r\n                                        tableHeaders.map((colVal,colIdx)=>(\r\n                                            <td key={colIdx}>{obj[colVal]}</td>\r\n                                        ))\r\n                                    \r\n                                        \r\n                                    }\r\n\r\n                                    <td>\r\n                                        <button className=\"btn btn-light\">\r\n                                            <Link to={`/updateEmp/${idx}`}>Edit</Link>\r\n                                        </button>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger\" \r\n                                                onClick={delRecordInComponent}\r\n                                                value={idx}>\r\n\r\n                                                    Delete\r\n\r\n                                        </button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport default TableComponent;\r\n","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\addEmployee.js",["116","117","118"],"import React, {useState, useEffect} from 'react';\r\nimport {HttpService} from './../mern/httpService';\r\n\r\nconst AddEmployeeComponent=(props)=>{\r\n\r\n    let serv = new HttpService();\r\n    const [employee,addEmployee] = useState({EmpNo:0,EmpName:'',Designation:'',Salary:0,DeptNo:0});\r\n    const [deptNoArr, getDeptArr] = useState([]);\r\n    const [empNoArr, getEmpArr] = useState([]);\r\n    const [errFlag, changeErrFlag] = useState({isEmpNoValid:false, isEmpNameValid:false, isSalaryValid:false, isDeptNoValid:false, isDesignationValid:false});\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Add employee component mounted\");\r\n        \r\n        serv.getAllDeptNo().then((resp)=>{getDeptArr(resp.data.response)}).catch((error)=>{console.log(error.message)});\r\n        serv.getAllEmpNo().then((resp)=>{getEmpArr(resp.data.response)}).catch((error)=>{console.log(error.message)});\r\n\r\n        \r\n    },[])\r\n\r\n    function clr()\r\n    {\r\n        let emp = {\r\n            EmpNo:0,\r\n            EmpName:'',\r\n            Salary:0,\r\n            DeptNo:0,\r\n            Designation:''\r\n        }\r\n\r\n        addEmployee({...emp});\r\n    }\r\n\r\n    function handleChanges(evt)\r\n    {\r\n        const name = evt.target.name;\r\n        const val = evt.target.value;\r\n        \r\n\r\n\r\n        if(name === \"EmpName\")\r\n        {\r\n            addEmployee({...employee, EmpName:val});\r\n\r\n            console.log(name , val);\r\n            if(val==\"\")\r\n            {\r\n                changeErrFlag({...errFlag,isEmpNameValid:false});\r\n            }\r\n\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isEmpNameValid:true});\r\n\r\n            }\r\n        }\r\n\r\n        else if(name === \"Designation\")\r\n        {\r\n            addEmployee({...employee, Designation:val});\r\n\r\n            console.log(name , val);\r\n            if(val==\"\")\r\n            {\r\n                changeErrFlag({...errFlag,isDesignationValid:false});\r\n            }\r\n\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isDesignationValid:true});\r\n\r\n            }\r\n        }\r\n\r\n        else if(name===\"Salary\")\r\n        {\r\n            if(val===\"\")\r\n            {\r\n                addEmployee({...employee, Salary:parseInt(\"0\")});\r\n                changeErrFlag({...errFlag,isSalaryValid:false});\r\n                return;\r\n            }\r\n\r\n            addEmployee({...employee, Salary:parseInt(val)});\r\n\r\n            if(val<0)\r\n            {\r\n                changeErrFlag({...errFlag,isSalaryValid:false});\r\n            }\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isSalaryValid:true});\r\n            }\r\n\r\n        }\r\n\r\n        else if(name===\"EmpNo\")\r\n        {\r\n            if(val===\"\")\r\n            {\r\n                addEmployee({...employee, EmpNo:parseInt(\"0\")});\r\n                changeErrFlag({...errFlag,isEmpNoValid:false});\r\n                return;\r\n            }\r\n\r\n            addEmployee({...employee, EmpNo:parseInt(val)});\r\n\r\n            \r\n            if(val<0 || empNoArr.includes(parseInt(val)))\r\n            {\r\n                changeErrFlag({...errFlag,isEmpNoValid:false});\r\n            }\r\n\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isEmpNoValid:true});\r\n\r\n            }\r\n\r\n        }\r\n\r\n        else\r\n        {\r\n            if(val===\"\")\r\n            {\r\n                addEmployee({...employee, DeptNo:parseInt(\"0\")});\r\n                changeErrFlag({...errFlag,isDeptNoValid:false});\r\n                return;\r\n            }\r\n\r\n            addEmployee({...employee, DeptNo:parseInt(val)});\r\n\r\n            if(val<0 || !deptNoArr.includes(parseInt(val)))\r\n            {\r\n                changeErrFlag({...errFlag,isDeptNoValid:false});\r\n            }\r\n\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isDeptNoValid:true});\r\n\r\n            }\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    function areAllValid()\r\n    {\r\n        let allValid = Object.values(errFlag);\r\n\r\n        if(allValid.includes(false)){return false;}\r\n\r\n        else{return true;}\r\n\r\n    }\r\n\r\n    function save()\r\n    {\r\n        console.log(employee);\r\n        \r\n        serv.postEmp(employee).then((resp)=>\r\n            {\r\n                alert(`Added ${JSON.stringify(employee)}`);\r\n                props.history.push(\"/\");\r\n            }\r\n            ).catch((error)=>{\r\n                console.log(error.message)\r\n            });\r\n    }\r\n\r\n   \r\n\r\n    return(\r\n            <div className=\"container\">\r\n                <h2>Add Employee</h2>\r\n\r\n                {JSON.stringify(empNoArr)}<br/>\r\n                {JSON.stringify(deptNoArr)}<br/>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>EmpNo</label>\r\n                    <input type=\"number\"\r\n                           value={employee.EmpNo} \r\n                           className=\"form-control\"\r\n                           name=\"EmpNo\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isEmpNoValid}>\r\n                         Employee Number is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>EmpName</label>\r\n                    <input type=\"text\"\r\n                           value={employee.EmpName} \r\n                           className=\"form-control\"\r\n                           name=\"EmpName\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isEmpNameValid}>\r\n                         Employee Name is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Designation</label>\r\n                    <input type=\"text\"\r\n                           value={employee.Designation} \r\n                           className=\"form-control\"\r\n                           name=\"Designation\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isDesignationValid}>\r\n                          Designation is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Salary</label>\r\n                    <input type=\"number\"\r\n                           value={employee.Salary} \r\n                           className=\"form-control\"\r\n                           name=\"Salary\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isSalaryValid}>\r\n                          Salary is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>DeptNo</label>\r\n                    <input type=\"number\"\r\n                           value={employee.DeptNo} \r\n                           className=\"form-control\"\r\n                           name=\"DeptNo\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isDeptNoValid}>\r\n                         Dept Number is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"btn btn-warning\" onClick={clr}>Clear</button>\r\n\r\n                <button className=\"btn btn-success\"  \r\n                        onClick={save}\r\n                        disabled={!areAllValid()}>\r\n\r\n                        Submit\r\n                </button>\r\n                \r\n            </div>\r\n    );\r\n\r\n\r\n    \r\n}\r\n\r\nexport default AddEmployeeComponent;","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\updateEmployee.js",["119","120","121"],"import React, {useState, useEffect} from 'react';\r\nimport {HttpService} from './../mern/httpService';\r\n\r\nconst UpdateEmployeeComponent=(props)=>{\r\n\r\n    let serv = new HttpService();\r\n    const [employee,addEmployee] = useState({EmpNo:0,EmpName:'',Designation:'',Salary:0,DeptNo:0});\r\n    const [deptNoArr, getDeptArr] = useState([]);\r\n    const [empNoArr, getEmpArr] = useState([]);\r\n    const [errFlag, changeErrFlag] = useState({isEmpNoValid:false, isEmpNameValid:false, isSalaryValid:false, isDeptNoValid:false, isDesignationValid:false});\r\n    let empArr = [];\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Update employee component mounted\");\r\n        let empArrID = props.match.params.id;\r\n\r\n        serv.getAllEmp().then((resp)=>{\r\n            empArr = resp.data.response;\r\n            addEmployee(empArr[empArrID]);\r\n        }).catch((e)=>{\r\n            console.log(e.message);\r\n        });\r\n\r\n        serv.getAllDeptNo().then((resp)=>{getDeptArr(resp.data.response)}).catch((error)=>{console.log(error.message)});\r\n\r\n        serv.getAllEmpNo().then((resp)=>{\r\n            getEmpArr(resp.data.response);\r\n        }\r\n        ).catch((error)=>{\r\n            console.log(error.message)\r\n        });\r\n\r\n\r\n\r\n        \r\n        \r\n    },[])\r\n\r\n    function clr()\r\n    {\r\n        let emp = {\r\n            EmpNo:0,\r\n            EmpName:'',\r\n            Salary:0,\r\n            DeptNo:0,\r\n            Designation:''\r\n        }\r\n\r\n        addEmployee({...emp});\r\n    }\r\n\r\n    function handleChanges(evt)\r\n    {\r\n        const name = evt.target.name;\r\n        const val = evt.target.value;\r\n        \r\n\r\n\r\n        if(name === \"EmpName\")\r\n        {\r\n            addEmployee({...employee, EmpName:val});\r\n\r\n            console.log(name , val);\r\n            if(val==\"\")\r\n            {\r\n                changeErrFlag({...errFlag,isEmpNameValid:false});\r\n            }\r\n\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isEmpNameValid:true});\r\n\r\n            }\r\n        }\r\n\r\n        else if(name === \"Designation\")\r\n        {\r\n            addEmployee({...employee, Designation:val});\r\n\r\n            console.log(name , val);\r\n            if(val==\"\")\r\n            {\r\n                changeErrFlag({...errFlag,isDesignationValid:false});\r\n            }\r\n\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isDesignationValid:true});\r\n\r\n            }\r\n        }\r\n\r\n        else if(name===\"Salary\")\r\n        {\r\n            if(val===\"\")\r\n            {\r\n                addEmployee({...employee, Salary:parseInt(\"0\")});\r\n                changeErrFlag({...errFlag,isSalaryValid:false});\r\n                return;\r\n            }\r\n\r\n            addEmployee({...employee, Salary:parseInt(val)});\r\n\r\n            if(val<0)\r\n            {\r\n                changeErrFlag({...errFlag,isSalaryValid:false});\r\n            }\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isSalaryValid:true});\r\n            }\r\n\r\n        }\r\n\r\n        else if(name===\"EmpNo\")\r\n        {\r\n            if(val===\"\")\r\n            {\r\n                addEmployee({...employee, EmpNo:parseInt(\"0\")});\r\n                changeErrFlag({...errFlag,isEmpNoValid:false});\r\n                return;\r\n            }\r\n\r\n            addEmployee({...employee, EmpNo:parseInt(val)});\r\n\r\n            \r\n            if(val<0)\r\n            {\r\n                changeErrFlag({...errFlag,isEmpNoValid:false});\r\n            }\r\n\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isEmpNoValid:true});\r\n\r\n            }\r\n\r\n        }\r\n\r\n        else\r\n        {\r\n            if(val===\"\")\r\n            {\r\n                addEmployee({...employee, DeptNo:parseInt(\"0\")});\r\n                changeErrFlag({...errFlag,isDeptNoValid:false});\r\n                return;\r\n            }\r\n\r\n            addEmployee({...employee, DeptNo:parseInt(val)});\r\n\r\n            if(val<0 || !deptNoArr.includes(parseInt(val)))\r\n            {\r\n                changeErrFlag({...errFlag,isDeptNoValid:false});\r\n            }\r\n\r\n            else\r\n            {\r\n                changeErrFlag({...errFlag,isDeptNoValid:true});\r\n\r\n            }\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    function areAllValid()\r\n    {\r\n        let allValid = Object.values(errFlag);\r\n\r\n        if(allValid.includes(false)){return false;}\r\n\r\n        else{return true;}\r\n\r\n    }\r\n\r\n    function save()\r\n    {\r\n        console.log(employee);\r\n        \r\n        serv.putEmp(employee).then((resp)=>\r\n            {\r\n                alert(`Updated ${JSON.stringify(employee)}`);\r\n                props.history.push(\"/\");\r\n            }\r\n            ).catch((error)=>{\r\n                console.log(error.message)\r\n            });\r\n    }\r\n\r\n   \r\n\r\n    return(\r\n            <div className=\"container\">\r\n                <h2>Add Employee</h2>\r\n\r\n                {JSON.stringify(empNoArr)}<br/>\r\n                {JSON.stringify(deptNoArr)}<br/>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>EmpNo</label>\r\n                    <input type=\"number\"\r\n                           value={employee.EmpNo} \r\n                           className=\"form-control\"\r\n                           name=\"EmpNo\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isEmpNoValid}>\r\n                         Employee Number is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>EmpName</label>\r\n                    <input type=\"text\"\r\n                           value={employee.EmpName} \r\n                           className=\"form-control\"\r\n                           name=\"EmpName\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isEmpNameValid}>\r\n                         Employee Name is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Designation</label>\r\n                    <input type=\"text\"\r\n                           value={employee.Designation} \r\n                           className=\"form-control\"\r\n                           name=\"Designation\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isDesignationValid}>\r\n                          Designation is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Salary</label>\r\n                    <input type=\"number\"\r\n                           value={employee.Salary} \r\n                           className=\"form-control\"\r\n                           name=\"Salary\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isSalaryValid}>\r\n                          Salary is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>DeptNo</label>\r\n                    <input type=\"number\"\r\n                           value={employee.DeptNo} \r\n                           className=\"form-control\"\r\n                           name=\"DeptNo\" \r\n                           onChange={handleChanges.bind(this)} />\r\n                    <div className=\"alert alert-danger\" hidden={errFlag.isDeptNoValid}>\r\n                         Dept Number is invalid\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"btn btn-warning\" onClick={clr}>Clear</button>\r\n\r\n                <button className=\"btn btn-success\"  \r\n                        onClick={save}\r\n                        disabled={!areAllValid()}>\r\n\r\n                        Submit\r\n                </button>\r\n                \r\n            </div>\r\n    );\r\n\r\n\r\n    \r\n}\r\n\r\nexport default UpdateEmployeeComponent;","E:\\Blazeclan\\External Training\\day11-dayxtask\\src\\finalmern\\jwtClient.js",["122","123","124","125","126","127","128","129","130"],"import React, {useState, useEffect, useCallback} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport {HttpService} from './../mern/httpService';\r\nimport {Route, Link, Switch, Redirect} from 'react-router-dom';\r\nimport MainComponent from './mainComponent';\r\n\r\nconst LoginComponent=(props)=>\r\n{\r\n    const [creds, updateCreds] = useState({\"Username\":\"\",\"Password\":\"\"});\r\n    const serv = new HttpService();\r\n    let statusCode=0;\r\n    const history = useHistory();\r\n\r\n    function valCreds()\r\n    {\r\n        serv.authUser(creds).then((resp)=>{\r\n            console.log(resp.data.statusCode);\r\n            if(resp.data.statusCode===200)\r\n            {\r\n                // history.push(\"/\");\r\n                localStorage.setItem('token', resp.data.token);\r\n\r\n            }\r\n        }\r\n        ).catch((e)=>{\r\n            console.log(e.message);\r\n        });\r\n    }\r\n\r\n    return(\r\n           <div className=\"container\"><br/>\r\n               <h2>Login Page</h2><br/>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label>Username:</label>\r\n                    <input type=\"text\"\r\n                           value={creds.Username}\r\n                           onChange={(evt)=>updateCreds({...creds,\"Username\":evt.target.value})} \r\n                           className=\"form-control\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" \r\n                           onChange={(evt)=>updateCreds({...creds,\"Password\":evt.target.value})}\r\n                           className=\"form-control\"\r\n                           value={creds.Password} />\r\n                </div>\r\n\r\n                <button className=\"btn btn-success\" onClick={valCreds}>Login</button>\r\n                {\r\n                    JSON.stringify(creds)\r\n                }\r\n\r\n                {/* <Switch>\r\n                    <Route exact path=\"/\" component={MainComponent}></Route>\r\n                    \r\n                </Switch> */}\r\n\r\n           </div>\r\n    );\r\n}\r\n\r\nexport default LoginComponent;",{"ruleId":"131","severity":1,"message":"132","line":20,"column":8,"nodeType":"133","messageId":"134","endLine":20,"endColumn":22},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":29,"column":23,"nodeType":"141","messageId":"142","endLine":29,"endColumn":27},{"ruleId":"135","replacedBy":"143"},{"ruleId":"137","replacedBy":"144"},{"ruleId":"135","replacedBy":"145"},{"ruleId":"137","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":60,"column":61,"nodeType":"149","messageId":"142","endLine":60,"endColumn":63},{"ruleId":"135","replacedBy":"150"},{"ruleId":"137","replacedBy":"151"},{"ruleId":"131","severity":1,"message":"152","line":3,"column":9,"nodeType":"133","messageId":"134","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"153","line":3,"column":22,"nodeType":"133","messageId":"134","endLine":3,"endColumn":28},{"ruleId":"131","severity":1,"message":"154","line":3,"column":30,"nodeType":"133","messageId":"134","endLine":3,"endColumn":38},{"ruleId":"131","severity":1,"message":"155","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":24},{"ruleId":"131","severity":1,"message":"156","line":1,"column":26,"nodeType":"133","messageId":"134","endLine":1,"endColumn":35},{"ruleId":"157","severity":1,"message":"158","line":17,"column":7,"nodeType":"159","endLine":17,"endColumn":9,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":29,"column":9,"nodeType":"159","endLine":29,"endColumn":17,"suggestions":"162"},{"ruleId":"147","severity":1,"message":"148","line":33,"column":15,"nodeType":"149","messageId":"142","endLine":33,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":33,"column":44,"nodeType":"149","messageId":"142","endLine":33,"endColumn":46},{"ruleId":"157","severity":1,"message":"158","line":19,"column":7,"nodeType":"159","endLine":19,"endColumn":9,"suggestions":"163"},{"ruleId":"147","severity":1,"message":"148","line":46,"column":19,"nodeType":"149","messageId":"142","endLine":46,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":63,"column":19,"nodeType":"149","messageId":"142","endLine":63,"endColumn":21},{"ruleId":"157","severity":1,"message":"164","line":18,"column":22,"nodeType":"165","endLine":18,"endColumn":40},{"ruleId":"147","severity":1,"message":"148","line":64,"column":19,"nodeType":"149","messageId":"142","endLine":64,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":81,"column":19,"nodeType":"149","messageId":"142","endLine":81,"endColumn":21},{"ruleId":"131","severity":1,"message":"156","line":1,"column":26,"nodeType":"133","messageId":"134","endLine":1,"endColumn":35},{"ruleId":"131","severity":1,"message":"166","line":1,"column":37,"nodeType":"133","messageId":"134","endLine":1,"endColumn":48},{"ruleId":"131","severity":1,"message":"152","line":4,"column":9,"nodeType":"133","messageId":"134","endLine":4,"endColumn":14},{"ruleId":"131","severity":1,"message":"167","line":4,"column":16,"nodeType":"133","messageId":"134","endLine":4,"endColumn":20},{"ruleId":"131","severity":1,"message":"153","line":4,"column":22,"nodeType":"133","messageId":"134","endLine":4,"endColumn":28},{"ruleId":"131","severity":1,"message":"154","line":4,"column":30,"nodeType":"133","messageId":"134","endLine":4,"endColumn":38},{"ruleId":"131","severity":1,"message":"168","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":21},{"ruleId":"131","severity":1,"message":"169","line":11,"column":9,"nodeType":"133","messageId":"134","endLine":11,"endColumn":19},{"ruleId":"131","severity":1,"message":"170","line":12,"column":11,"nodeType":"133","messageId":"134","endLine":12,"endColumn":18},"no-unused-vars","'LoginComponent' is defined but never used.","Identifier","unusedVar","no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-eval","eval can be harmful.","CallExpression","unexpected",["171"],["172"],["171"],["172"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["171"],["172"],"'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'serv'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useCallback has a missing dependency: 'serv'. Either include it or remove the dependency array.",["174"],["175"],"Assignments to the 'empArr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'useCallback' is defined but never used.","'Link' is defined but never used.","'MainComponent' is defined but never used.","'statusCode' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"176","fix":"180"},"Update the dependencies array to be: [serv]",{"range":"181","text":"182"},"Update the dependencies array to be: [empArr, serv]",{"range":"183","text":"184"},{"range":"185","text":"182"},[478,480],"[serv]",[834,842],"[empArr, serv]",[891,893]]